package com.hanpass.batch.common.type;

import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.ToString;

import java.util.Arrays;

/**
 * Package :: com.hanpass.settlement.admin.util
 * Developer :: Ha Kyounghwi
 * Date :: 2020/10/27
 * Description ::
 */
@Getter
@AllArgsConstructor
@ToString
public enum NationalityCode {
    //국가코드
    KR("대한민국", "Korea, Republic of", "+82"),
    CN("중국", "China", "+86"),
    JP("일본", "Japan", "+81"),
    VN("베트남", "Viet Nam", "+84"),
    ID("인도네시아", "Indonesia", "+62"),
    AD("안도라", "Andorra", "+376"),
    AE("아랍 에미레이트", "United Arab Emirates", "+971"),
    AF("아프가니스탄", "Afghanistan", "+93"),
    AG("앤티가바부다", "Antigua and Barbuda", "+1268"),
    AI("안길라", "Anguilla", "+1264"),
    AL("알바니아", "Albania", "+355"),
    AM("아르메니아", "Armenia", "+374"),
    AN("네덜란드령 안틸레스", "Netherlands Antilles", "+599"),
    AO("앙골라", "Angola", "+244"),
    AQ("", "Antarctica", "+0"),
    AR("아르헨티나", "Argentina", "+54"),
    AS("미국령 사모아", "American Samoa", "+1684"),
    AT("오스트리아", "Austria", "+43"),
    AU("오스트레일리아", "Australia", "+61"),
    AW("아루바", "Aruba", "+297"),
    AZ("아제르바이잔", "Azerbaijan", "+994"),
    BA("보스니아-헤르체코비나", "Bosnia and Herzegovina", "+387"),
    BB("바베이도스", "Barbados", "+1246"),
    BD("방글라데시", "Bangladesh", "+880"),
    BE("벨기에", "Belgium", "+32"),
    BF("부르키나파소", "Burkina Faso", "+226"),
    BG("불가리아", "Bulgaria", "+359"),
    BH("바레인", "Bahrain", "+973"),
    BI("부룬디", "Burundi", "+257"),
    BJ("베냉", "Benin", "+229"),
    BM("버뮤다", "Bermuda", "+1441"),
    BN("브루나이", "Brunei Darussalam", "+673"),
    BO("볼리비아", "Bolivia", "+591"),
    BR("브라질", "Brazil", "+55"),
    BS("바하마", "Bahamas", "+1242"),
    BT("부탄", "Bhutan", "+975"),
    BV("", "Bouvet Island", "+0"),
    BW("보츠와나", "Botswana", "+267"),
    BY("벨라루스", "Belarus", "+375"),
    BZ("벨리즈", "Belize", "+501"),
    CA("캐나다", "Canada", "+1"),
    CC("코코스 아일랜드", "Cocos (Keeling) Islands", "+672"),
    CD("콩고(구 자이레)", "Congo, the Democratic Republic of the", "+242"),
    CF("중앙아프리카공화국", "Central African Republic", "+236"),
    CG("콩고,브라자빌", "Congo", "+242"),
    CH("스위스", "Switzerland", "+41"),
    CI("코트디부아르", "Cote D'Ivoire", "+225"),
    CK("쿡아일랜드", "Cook Islands", "+682"),
    CL("칠레", "Chile", "+56"),
    CM("카메룬", "Cameroon", "+237"),
    CO("콜롬비아", "Colombia", "+57"),
    CR("코스타리카", "Costa Rica", "+506"),
    CS("", "Serbia and Montenegro", "+381"),
    CU("쿠바", "Cuba", "+53"),
    CV("카포베르데", "Cape Verde", "+238"),
    CX("크리스마스 아일랜드", "Christmas Island", "+61"),
    CY("사이프러스", "Cyprus", "+357"),
    CZ("체코", "Czech Republic", "+420"),
    DE("독일", "Germany", "+49"),
    DJ("지부티", "Djibouti", "+253"),
    DK("덴마크", "Denmark", "+45"),
    DM("도미니카 연방", "Dominica", "+1767"),
    DO("도미니카공화국", "Dominican Republic", "+1809"),
    DZ("알제리", "Algeria", "+213"),
    EC("에콰도르", "Ecuador", "+593"),
    EE("에스토니아", "Estonia", "+372"),
    EG("이집트", "Egypt", "+20"),
    EH("웨스턴사하라", "Western Sahara", "+212"),
    ER("에리트리아", "Eritrea", "+291"),
    ES("스페인", "Spain", "+34"),
    ET("에티오피아", "Ethiopia", "+251"),
    FI("핀란드", "Finland", "+358"),
    FJ("피지", "Fiji", "+679"),
    FK("포클랜드(말비나스)군도", "Falkland Islands (Malvinas)", "+500"),
    FM("미크로네시아", "Micronesia, Federated States of", "+691"),
    FO("패로아일랜드", "Faroe Islands", "+298"),
    FR("프랑스", "France", "+33"),
    GA("가봉", "Gabon", "+241"),
    GB("영국", "United Kingdom", "+44"),
    GD("그레나다", "Grenada", "+1473"),
    GE("그루지아", "Georgia", "+995"),
    GF("프랑스령 가이아나", "French Guiana", "+594"),
    GH("가나", "Ghana", "+233"),
    GI("지브롤터", "Gibraltar", "+350"),
    GL("그린랜드", "Greenland", "+299"),
    GM("감비아", "Gambia", "+220"),
    GN("기니", "Guinea", "+224"),
    GP("과달루프", "Guadeloupe", "+590"),
    GQ("적도 기니", "Equatorial Guinea", "+240"),
    GR("그리스", "Greece", "+30"),
    GS("남조지아.남샌드위치군도", "South Georgia and the South Sandwich Islands", "+0"),
    GT("과테말라", "Guatemala", "+502"),
    GU("괌", "Guam", "+1671"),
    GW("기니비사우", "Guinea-Bissau", "+245"),
    GY("가이아나", "Guyana", "+592"),
    HK("홍콩", "Hong Kong", "+852"),
    HM("허드섬", "Heard Island and Mcdonald Islands", "+0"),
    HN("온두라스", "Honduras", "+504"),
    HR("크로아티아", "Croatia", "+385"),
    HT("아이티", "Haiti", "+509"),
    HU("헝가리", "Hungary", "+36"),
    IE("아일랜드", "Ireland", "+353"),
    IL("이스라엘", "Israel", "+972"),
    IM("맨아일", "Isle of Man", "+0"),
    IN("인도", "India", "+91"),
    IO("영국령 인도양지역", "British Indian Ocean Territory", "+246"),
    IQ("이라크", "Iraq", "+964"),
    IR("이란", "Iran, Islamic Republic of", "+98"),
    IS("아이슬랜드", "Iceland", "+354"),
    IT("이탈리아", "Italy", "+39"),
    JE("챠넬아일랜드", "Channel Islands", "+0"),
    JM("자마이카", "Jamaica", "+1876"),
    JO("요르단", "Jordan", "+962"),
    KE("케냐", "Kenya", "+254"),
    KG("키르키스스탄", "Kyrgyzstan", "+996"),
    KH("캄보디아", "Cambodia", "+855"),
    KI("키리바시", "Kiribati", "+686"),
    KM("코모로", "Comoros", "+269"),
    KN("세인트 킷츠 네비스", "Saint Kitts and Nevis", "+1869"),
    KP("북한", "Korea, Democratic People's Republic of", "+850"),
    KW("쿠웨이트", "Kuwait", "+965"),
    KY("케이만군도", "Cayman Islands", "+1345"),
    KZ("카자흐스탄", "Kazakhstan", "+7"),
    LA("라오스", "Lao People's Democratic Republic", "+856"),
    LB("레바논", "Lebanon", "+961"),
    LC("세인트 루시아", "Saint Lucia", "+1758"),
    LI("리히텐쉬타인", "Liechtenstein", "+423"),
    LK("스리랑카", "Sri Lanka", "+94"),
    LR("라이베리아", "Liberia", "+231"),
    LS("레소토", "Lesotho", "+266"),
    LT("리투아니아", "Lithuania", "+370"),
    LU("룩셈부르크", "Luxembourg", "+352"),
    LV("라트비아", "Latvia", "+371"),
    LY("리비아", "Libyan Arab Jamahiriya", "+218"),
    MA("모로코", "Morocco", "+212"),
    MC("모나코", "Monaco", "+377"),
    MD("몰도바", "Moldova, Republic of", "+373"),
    MG("마다가스카르", "Madagascar", "+261"),
    MH("마샬군도", "Marshall Islands", "+692"),
    MK("마케도니아", "Macedonia, the Former Yugoslav Republic of", "+389"),
    ML("말리", "Mali", "+223"),
    MM("미얀마", "Myanmar", "+95"),
    MN("몽골", "Mongolia", "+976"),
    MO("마카오", "Macao", "+853"),
    MP("북마리아나 군도", "Northern Mariana Islands", "+1670"),
    MQ("말티니크", "Martinique", "+596"),
    MR("모리타니아", "Mauritania", "+222"),
    MS("몬트세라트", "Montserrat", "+1664"),
    MT("몰타", "Malta", "+356"),
    MU("모리셔스", "Mauritius", "+230"),
    MV("몰디브", "Maldives", "+960"),
    MW("말라위", "Malawi", "+265"),
    MX("멕시코", "Mexico", "+52"),
    MY("말레이지아", "Malaysia", "+60"),
    MZ("모잠비크", "Mozambique", "+258"),
    NA("나미비아", "Namibia", "+264"),
    NC("뉴 칼레도니아", "New Caledonia", "+687"),
    NE("니제르", "Niger", "+227"),
    NF("노르포크 아일랜드", "Norfolk Island", "+672"),
    NG("나이지리아", "Nigeria", "+234"),
    NI("니카라과", "Nicaragua", "+505"),
    NL("네덜란드", "Netherlands", "+31"),
    NO("노르웨이", "Norway", "+47"),
    NP("네팔", "Nepal", "+977"),
    NR("나우루", "Nauru", "+674"),
    NU("니우에", "Niue", "+683"),
    NZ("뉴질랜드", "New Zealand", "+64"),
    OM("오만", "Oman", "+968"),
    PA("파나마", "Panama", "+507"),
    PE("페루", "Peru", "+51"),
    PF("프랑스령 폴리네시아", "French Polynesia", "+689"),
    PG("파푸아뉴기니", "Papua New Guinea", "+675"),
    PH("필리핀", "Philippines", "+63"),
    PK("파키스탄", "Pakistan", "+92"),
    PL("폴란드", "Poland", "+48"),
    PM("세인트 피에르도 미퀘론도", "Saint Pierre and Miquelon", "+508"),
    PN("피트케안군도", "Pitcairn", "+0"),
    PR("푸에르토 리코", "Puerto Rico", "+1787"),
    PS("팔레스타인", "Palestinian Territory, Occupied", "+970"),
    PT("포르투갈", "Portugal", "+351"),
    PW("팔라우", "Palau", "+680"),
    PY("파라과이", "Paraguay", "+595"),
    QA("카타르", "Qatar", "+974"),
    RE("리유니온", "Reunion", "+262"),
    RO("루마니아", "Romania", "+40"),
    RU("러시아", "Russian Federation", "+70"),
    RW("르완다", "Rwanda", "+250"),
    SA("사우디 아라비아", "Saudi Arabia", "+966"),
    SB("솔로몬군도", "Solomon Islands", "+677"),
    SC("세이셸", "Seychelles", "+248"),
    SD("수단", "Sudan", "+249"),
    SE("스웨덴", "Sweden", "+46"),
    SG("싱가포르", "Singapore", "+65"),
    SH("세인트 헬레나", "Saint Helena", "+290"),
    SI("슬로베니아", "Slovenia", "+386"),
    SJ("스발바드", "Svalbard and Jan Mayen", "+47"),
    SK("슬로바키아", "Slovakia", "+421"),
    SL("시에라리온", "Sierra Leone", "+232"),
    SM("산마리노", "San Marino", "+378"),
    SN("세네갈", "Senegal", "+221"),
    SO("소말리아", "Somalia", "+252"),
    SR("수리남", "Suriname", "+597"),
    ST("상투메프린시페", "Sao Tome and Principe", "+239"),
    SV("엘살바도르", "El Salvador", "+503"),
    SY("시리아", "Syrian Arab Republic", "+963"),
    SZ("스와질랜드", "Swaziland", "+268"),
    TC("터크스 카이코스군도", "Turks and Caicos Islands", "+1649"),
    TD("차드", "Chad", "+235"),
    TF("프랑스령 극남군도", "French Southern Territories", "+0"),
    TG("토고", "Togo", "+228"),
    TH("타일랜드", "Thailand", "+66"),
    TJ("타지키스탄", "Tajikistan", "+992"),
    TK("토켈라우군도", "Tokelau", "+690"),
    TL("", "Timor-Leste", "+670"),
    TM("투르크메니스탄", "Turkmenistan", "+7370"),
    TN("튀니지", "Tunisia", "+216"),
    TO("통가왕국", "Tonga", "+676"),
    TR("터키", "Turkey", "+90"),
    TT("트리니다드토바고", "Trinidad and Tobago", "+1868"),
    TV("투발루", "Tuvalu", "+688"),
    TW("대만", "Taiwan, Province of China", "+886"),
    TZ("탄자니아", "Tanzania, United Republic of", "+255"),
    UA("우크라이나", "Ukraine", "+380"),
    UG("우간다", "Uganda", "+256"),
    UM("", "United States Minor Outlying Islands", "+1"),
    US("미국", "United States", "+1"),
    UY("우루과이", "Uruguay", "+598"),
    UZ("우즈베키스탄", "Uzbekistan", "+998"),
    VA("바티칸", "Holy See (Vatican City State)", "+39"),
    VC("세인트 빈센트 그레나딘", "Saint Vincent and the Grenadines", "+1784"),
    VE("베네수엘라", "Venezuela", "+58"),
    VG("영국령 버진군도", "Virgin Islands, British", "+1284"),
    VI("미국령 버진군도", "Virgin Islands, U.s.", "+1340"),
    VU("바누아투", "Vanuatu", "+678"),
    WF("월리스푸트나군도", "Wallis and Futuna", "+681"),
    WS("서사모아", "Samoa", "+684"),
    YE("예멘", "Yemen", "+967"),
    YT("마요티", "Mayotte", "+269"),
    YU("세르비아-몬테네그로", "Republic of Serbia-Montenegro", "+0"),
    ZA("남아프리카공화국", "South Africa", "+27"),
    ZM("잠비아", "Zambia", "+260"),
    ZW("짐바브웨", "Zimbabwe", "+263");

    private final String krName;
    private final String enName;
    private final String phoneNumber;

    /**
     * get nation code object by enum name
     * @param name
     * @return NationalityCode
     * @throws Exception
     */
    public static NationalityCode getCode(String name) throws Exception {
        return Arrays.stream(NationalityCode.values())
                .filter(nationCode -> nationCode.name().equals(name))
                .findAny().orElseThrow(() -> new Exception("Invalid code"));
    }
}